image: python:2.7

stages:
    - build
    - artifacts
    - test

before_script:
    # pip is sensitive to internet glitches
    - export PIP_DEFAULT_TIMEOUT=120

    - apt-get update
    - apt-get install -y libarchive-dev p7zip-full zip

.artifacts: &artifacts
    artifacts:
        name: "$CI_JOB_NAME"
        expire_in: 1 wk
        paths:
            - dist/*.whl
            - examples/*
            - tests/*
            - env.sh

#### build

.buildjob: &buildjob
    stage: build
    <<: *artifacts
    script:
        - ls -la *
        - pip wheel -v -w dist $PIP_ARGS .
        - ls -la dist
        - find . -iname \*.whl | xargs unzip -l

.buildplatjob: &buildplatjob
    <<: *buildjob
    variables:
        PIP_ARGS: --build-option --plat-name --build-option $CI_JOB_NAME

testsrc:
    stage: build
    <<: *artifacts
    script:
        - pip install -r requirements.txt
        - python download_deps.py
        - ls -la examples
        - ls -la tests

purelib:
    <<: *buildjob

manylinux1_i686:
    <<: *buildplatjob

manylinux1_x86_64:
    <<: *buildplatjob

win32:
    <<: *buildplatjob

win_amd64:
    <<: *buildplatjob

macosx_10_11_x86_64:
    <<: *buildplatjob

##### collect

collect:
    stage: artifacts
    <<: *artifacts
    variables:
        ARTIFACT_URL : $CI_JOB_URL/artifacts/download
    script:
        - ls -l dist/*.whl
        - echo "export ARTIFACT_URL=$ARTIFACT_URL" > env.sh

##### install-from-source tests

.installtest: &installtest
    stage: test
    script:
        - pip install .

install_py2:
    image: python:2.7
    <<: *installtest

install_py3:
    image: python:3.5
    <<: *installtest

##### linux tests

.linuxtest: &linuxtest
    stage: test
    script:
        - apt-get install -y python python-pip
        - pip install clang --no-index --find-links file://$PWD/dist
        - python -m unittest discover

test_linux_x86_64:
    image: ubuntu:16.04
    <<: *linuxtest

test_linux_i386:
    image: ioft/i386-ubuntu:16.04
    <<: *linuxtest

##### external CI tests

.externalci: &externalci
    stage: test
    script:
        - source env.sh
        - echo ARTIFACT_URL $ARTIFACT_URL
        - ./trigger-$EXTERNAL_CI_NAME.sh

# sadly there's no mac runners on GitLab cloud, so we delegate to Travis CI
test_mac:
    <<: *externalci
    variables:
        EXTERNAL_CI_NAME: travis

# sadly there's no mac runners on GitLab cloud, so we delegate to AppVeyor
test_win:
    <<: *externalci
    variables:
        EXTERNAL_CI_NAME: appveyor
