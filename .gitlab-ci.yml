variables:
    LLVM_VERSION: 6.0.1
    PACKAGE_VERSION: "0"
    PYTHON_PATH: /opt/python/cp27-cp27mu/bin:$PATH

before_script:
    # pip is sensitive to internet glitches
    - export PIP_DEFAULT_TIMEOUT=120

    # make sure we use the right python
    - export PATH=$PYTHON_PATH:$PATH

    - echo LLVM_VERSION=$LLVM_VERSION
    - echo PACKAGE_VERSION=$PACKAGE_VERSION
    - set -x
    - if [ "$LLVM_VERSION.$PACKAGE_VERSION" != `cat version.txt` ]; then echo "CI versions don't match version.txt"; exit 1; fi

.artifacts: &artifacts
    artifacts:
        name: "$CI_JOB_NAME"
        expire_in: 1 wk
        paths:
            - dist/*.whl
            - examples/*
            - tests/*

#### build

.buildjob: &buildjob
    stage: build
    <<: *artifacts

.whlcommands: &whlcommands |
    ls -la *
    yum install -y xz-devel
    pip wheel -w dist --build-option --plat-name --build-option $CI_JOB_NAME .
    ls -la dist
    find . -iname \*.whl | xargs unzip -l

.linuxjob: &linuxjob
    <<: *buildjob
    script:
        - cp /opt/llvm/lib/libclang*so* clang
        - *whlcommands

manylinux1_x86_64:
    <<: *linuxjob
    image: paleozogt/manylinux1_x86_64_clang:$LLVM_VERSION

manylinux1_i686:
    <<: *linuxjob
    image: paleozogt/manylinux1_i686_clang:$LLVM_VERSION

.winjob: &winjob
    <<: *buildjob
    image: quay.io/pypa/manylinux1_x86_64
    script:
        - python -c "from urllib import urlretrieve; urlretrieve('$LLVM_BIN_URL', 'LLVM-$LLVM_VERSION-win64.exe')"
        - yum install -y p7zip p7zip-plugins
        - mkdir LLVM-$LLVM_VERSION-win64 && 7z x LLVM-$LLVM_VERSION-win64.exe -oLLVM-$LLVM_VERSION-win64
        - find LLVM-$LLVM_VERSION-win64 -iname libclang.dll | xargs -Ifile cp file clang
        - find LLVM-$LLVM_VERSION-win64 -iname msvc\*.dll | xargs -Ifile cp file clang
        - find LLVM-$LLVM_VERSION-win64 -iname vcruntime\*.dll | xargs -Ifile cp file clang
        - *whlcommands

win32:
    <<: *winjob
    variables:
        LLVM_BIN_URL: http://releases.llvm.org/$LLVM_VERSION/LLVM-$LLVM_VERSION-win32.exe

win_amd64:
    <<: *winjob
    variables:
        LLVM_BIN_URL: http://releases.llvm.org/$LLVM_VERSION/LLVM-$LLVM_VERSION-win64.exe

macosx_10_11_x86_64:
    <<: *buildjob
    image: quay.io/pypa/manylinux1_x86_64
    variables:
        LLVM_BIN_URL: https://homebrew.bintray.com/bottles/llvm-$LLVM_VERSION.el_capitan.bottle.tar.gz
    script:
        - python -c "from urllib import urlretrieve; urlretrieve('$LLVM_BIN_URL', 'llvm-$LLVM_VERSION.el_capitan.bottle.tar.gz')"
        - tar xvf *.tar.gz
        - cp llvm/$LLVM_VERSION/lib/libclang.dylib clang
        - *whlcommands

##### test

.linuxtest: &linuxtest
    stage: test
    <<: *artifacts
    script:
        - apt-get update && apt-get install -y python python-pip
        - pip install dist/*$WHEEL_PLAT.whl
        - python -m unittest discover

test_linux_x86_64:
    image: ubuntu:16.04
    variables:
        WHEEL_PLAT: manylinux1_x86_64
    <<: *linuxtest

test_linux_i386:
    image: ioft/i386-ubuntu:16.04
    variables:
        WHEEL_PLAT: manylinux1_i686
    <<: *linuxtest

##### deploy

collect:
    stage: deploy
    <<: *artifacts
    script:
        - ls -l dist/*.whl
